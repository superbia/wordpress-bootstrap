#!/usr/bin/env bash

readonly PROJECT="$(pwd)"
readonly THEME_DIR="$PROJECT"/public/app/themes
readonly BOOTSTRAP_THEME="$THEME_DIR"/_s

readonly RESET_TEXT=$(tput sgr0)
readonly RED=$(tput setaf 1)
readonly GREEN=$(tput setaf 2)

titleCase() {
  a=$(echo "$1" | tr '[:upper:]' '[:lower:]' )
  echo "$a" | awk '{for(i=1;i<=NF;i++){ $i=toupper(substr($i,1,1)) substr($i,2) }}1'
}

# Display a confirmation message and return 0/1 based on the result.
confirm() {
  read -r -p "$1 [Y/n] " response
  response=$(echo "$response" | tr '[:upper:]' '[:lower:]')

  if [[ "$response" == "y" ]]; then
  return 0
  fi

  return 1
}

read -rp "Theme name [My Awesome Theme]: " themeName
read -rp "Domain name [awesome.com]:" domainName
echo ""
echo "Doing theme search and replace..."

textDomain=$(echo "${themeName// /-}" | tr '[:upper:]' '[:lower:]' )
functionPrefix=${textDomain//-/_}
packageName=$(titleCase "$themeName")
packageName=${packageName// /}

# Check the bootstrap theme exists
if [[ -d "$BOOTSTRAP_THEME" ]]; then
  # Text domain: Search for: '_s' and replace with: 'megatherium-is-awesome'
  find "$BOOTSTRAP_THEME" -name '*.php' -exec sed -i '' "s/'_s'/'$textDomain'/g" {} \;
  echo "- Updated the text domain: $GREEN$textDomain$RESET_TEXT"
  # Function names: Search for: _s_ and replace with: megatherium_is_awesome_
  find "$BOOTSTRAP_THEME" -name '*.php' -exec sed -i '' "s/_s_/$functionPrefix/g" {} \;
  echo "- Updated the function name prefix: $GREEN$functionPrefix$RESET_TEXT"
  # Search for: Text Domain: _s and replace with: Text Domain: megatherium-is-awesome in style.css.
  find "$BOOTSTRAP_THEME" -name '*.css' -exec sed -i '' "s/Text Domain: _s/Text Domain: $textDomain/g" {} \;
  echo "- Updated the style text domain: ${GREEN}Text Domain: $textDomain$RESET_TEXT"
  # Doc blocks: Search for:  _s and replace with:  Megatherium_is_Awesome
  find "$BOOTSTRAP_THEME" -name '*.php' -exec sed -i '' "s/ _s/ $packageName/g" {} \;
  echo "- Updated doc blocks: $GREEN$packageName$RESET_TEXT"
  # Prefixed handles Search for: _s- and replace with: megatherium-is-awesome-
  find "$BOOTSTRAP_THEME" -name '*.php' -exec sed -i '' "s/_s-/$textDomain-/g" {} \;
  echo "- Updated prefixed handles: $GREEN$textDomain-$RESET_TEXT"
  # rename the directory
  $(mv "$BOOTSTRAP_THEME" "$THEME_DIR/$textDomain")
  echo "- Renamed the theme directory: $GREEN$THEME_DIR/$textDomain$RESET_TEXT"
  echo "Completed the theme search and replace!"
else
  echo "$REDThe bootrap '_s' theme is missing!$RESET_TEXT"
  echo "- $BOOTSTRAP_THEME"
  #exit 0
fi

echo ""
echo "Updating config..."

# Create random db prefix
dbPrefix=$(cat /dev/urandom | env LC_CTYPE=C tr -dc 'a-z0-9' | fold -w 6 | head -n 1)
if [[ -f "$PROJECT"/public/wp-config.php ]]; then
  sed -i '' "s/WP_DB_PREFIX/${dbPrefix}_/g" "$PROJECT"/public/wp-config.php;
  echo "- Created random database prefix: $GREEN${dbPrefix}_$RESET_TEXT"
fi

# Update the gulp proxy
if [[ -f "$THEME_DIR/$textDomain/gulpfile.js" ]]; then
  sed -i '' "s/wp-bootstrap.dev/dev.${domainName}/g" "$THEME_DIR/$textDomain/gulpfile.js";
  echo "- Updated Browsersync proxy url"
fi

echo ""
echo "Setting up version control..."

# remove the git repo
if [[ -d "$PROJECT"/.git ]]; then
  if confirm "Remove bootstrap git repo and init new"; then
    $(rm -rf "$PROJECT/.git")
    echo "- Removed boostrap git repo"
    # create new git repo
    $(git init "$PROJECT" > /dev/null 2>&1)
    $(git add "$PROJECT" > /dev/null 2>&1)
    $(git commit -m "Initial project bootstrap." > /dev/null 2>&1)
    echo "- Created a new git repo"
  fi
fi

# Project install
echo ""
echo "Installing the project..."
$("$PROJECT/bin/install" --theme "$textDomain")

exit 0
